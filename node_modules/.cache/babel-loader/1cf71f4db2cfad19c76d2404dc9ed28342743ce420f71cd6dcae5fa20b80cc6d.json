{"ast":null,"code":"var _jsxFileName = \"/Users/alain/Documents/the-gym/react-curriculum/section-three/src/components/Meme.jsx\",\n  _s = $RefreshSig$();\nimport memes from \"../shareable/memesData\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Meme = () => {\n  _s();\n  const [url, setUrl] = useState('');\n  const handleClick = () => {\n    const randomNum = Math.floor(Math.random() * memes.length);\n    const url = memes[randomNum].url;\n    setUrl(url);\n    // console.log(url);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Top text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Bottom text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"Get a new meme image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: url,\n      alt: \"Meme image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n_s(Meme, \"ZV/BRor2ecoM1gSD+06O4c7I8qc=\");\n_c = Meme;\nexport default Meme;\nvar _c;\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"names":["memes","useState","Meme","url","setUrl","handleClick","randomNum","Math","floor","random","length"],"sources":["/Users/alain/Documents/the-gym/react-curriculum/section-three/src/components/Meme.jsx"],"sourcesContent":["import memes from \"../shareable/memesData\";\nimport { useState } from \"react\";\n\nconst Meme = () => {\n    const [url, setUrl] = useState('');\n\n    const handleClick = () => {\n        const randomNum = Math.floor(Math.random() * memes.length);\n        const url = memes[randomNum].url;\n        setUrl(url);\n        // console.log(url);\n    }\n\n    return ( \n        <main>\n            <div>\n                <input type=\"text\" placeholder=\"Top text\" />\n                <input type=\"text\" placeholder=\"Bottom text\" />\n                <br />\n                <br />\n                <button onClick={handleClick}>Get a new meme image</button>\n            </div>\n            <img src={url} alt=\"Meme image\" />\n        </main>\n    );\n}\n \nexport default Meme;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,wBAAwB;AAC1C,SAASC,QAAQ,QAAQ,OAAO;AAAC;AAEjC,MAAMC,IAAI,GAAG,MAAM;EAAA;EACf,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EAElC,MAAMI,WAAW,GAAG,MAAM;IACtB,MAAMC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGT,KAAK,CAACU,MAAM,CAAC;IAC1D,MAAMP,GAAG,GAAGH,KAAK,CAACM,SAAS,CAAC,CAACH,GAAG;IAChCC,MAAM,CAACD,GAAG,CAAC;IACX;EACJ,CAAC;;EAED,oBACI;IAAA,wBACI;MAAA,wBACI;QAAO,IAAI,EAAC,MAAM;QAAC,WAAW,EAAC;MAAU;QAAA;QAAA;QAAA;MAAA,QAAG,eAC5C;QAAO,IAAI,EAAC,MAAM;QAAC,WAAW,EAAC;MAAa;QAAA;QAAA;QAAA;MAAA,QAAG,eAC/C;QAAA;QAAA;QAAA;MAAA,QAAM,eACN;QAAA;QAAA;QAAA;MAAA,QAAM,eACN;QAAQ,OAAO,EAAEE,WAAY;QAAA,UAAC;MAAoB;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACzD,eACN;MAAK,GAAG,EAAEF,GAAI;MAAC,GAAG,EAAC;IAAY;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAC/B;AAEf,CAAC;AAAA,GAtBKD,IAAI;AAAA,KAAJA,IAAI;AAwBV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}