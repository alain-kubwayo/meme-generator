{"ast":null,"code":"var _jsxFileName = \"/Users/alain/Documents/the-gym/react-curriculum/section-three/src/components/Meme.jsx\",\n  _s = $RefreshSig$();\nimport memes from \"../shareable/memesData\";\nimport { useState } from \"react\";\nimport Count from \"./Count\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Meme = () => {\n  _s();\n  // const [count, setCount] = useState(0);\n  // const [isGoingOut, setIsGoingOut] = useState(false);\n  // const [person, setPerson] = useState({\n  //     name: 'alain',\n  //     isStudent: false\n  // });\n  const [meme, setMeme] = useState({\n    topText: \"\",\n    bottomText: \"\",\n    url: \"https://i.imgflip.com/30b1gx.jpg\"\n  });\n  const [allMemeImages, setAllMemeImages] = useState(memes);\n  const handleClick = () => {\n    const randomNum = Math.floor(Math.random() * allMemeImages.length);\n    const url = allMemeImages[randomNum].url;\n    setMeme(prevMeme => ({\n      ...prevMeme,\n      url\n    }));\n  };\n\n  // const add = () => {\n  //     setCount(prevCount => prevCount + 1);\n  // }\n\n  // const remove = () => {\n  //     setCount(prevCount => prevCount - 1);\n  // }\n\n  // const handleToggleStudent = () => {\n  //     setPerson(prevPerson => ({...prevPerson, isStudent: !prevPerson.isStudent}));\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Top text\",\n        name: \"topText\",\n        value: meme.topText,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Bottom text\",\n        name: \"bottomText\",\n        value: meme.bottomText,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"Get a new meme image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative w-1/2\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: meme.url,\n        alt: \"Meme image\",\n        className: \"w-full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"absolute top-5 left-1/4 text-white text-xl uppercase font-bold\",\n        children: meme.topText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"absolute bottom-5 left-1/4 text-white text-xl uppercase font-bold\",\n        children: meme.bottomText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(Meme, \"RfMJcE0sPDI7/jJmXFQG0e2W+jk=\");\n_c = Meme;\nexport default Meme;\nvar _c;\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"names":["memes","useState","Count","Meme","meme","setMeme","topText","bottomText","url","allMemeImages","setAllMemeImages","handleClick","randomNum","Math","floor","random","length","prevMeme","handleChange"],"sources":["/Users/alain/Documents/the-gym/react-curriculum/section-three/src/components/Meme.jsx"],"sourcesContent":["import memes from \"../shareable/memesData\";\nimport { useState } from \"react\";\nimport Count from \"./Count\";\n\n\nconst Meme = () => {\n    // const [count, setCount] = useState(0);\n    // const [isGoingOut, setIsGoingOut] = useState(false);\n    // const [person, setPerson] = useState({\n    //     name: 'alain',\n    //     isStudent: false\n    // });\n    const [meme, setMeme] = useState({\n        topText: \"\",\n        bottomText: \"\",\n        url: \"https://i.imgflip.com/30b1gx.jpg\"\n    })\n    const[allMemeImages, setAllMemeImages] = useState(memes);\n\n    const handleClick = () => {\n        const randomNum = Math.floor(Math.random() * allMemeImages.length);\n        const url = allMemeImages[randomNum].url;\n        setMeme(prevMeme => ({\n            ...prevMeme,\n            url\n        }))\n    }\n\n    // const add = () => {\n    //     setCount(prevCount => prevCount + 1);\n    // }\n\n    // const remove = () => {\n    //     setCount(prevCount => prevCount - 1);\n    // }\n\n    // const handleToggleStudent = () => {\n    //     setPerson(prevPerson => ({...prevPerson, isStudent: !prevPerson.isStudent}));\n    // }\n\n    return ( \n        <main>\n            <div>\n                <input \n                    type=\"text\" \n                    placeholder=\"Top text\" \n                    name=\"topText\"\n                    value={meme.topText}\n                    onChange={handleChange}\n                />\n                <input \n                    type=\"text\" \n                    placeholder=\"Bottom text\" \n                    name=\"bottomText\"\n                    value={meme.bottomText}\n                    onChange={handleChange}\n                />\n                <br />\n                <br />\n                <button onClick={handleClick}>Get a new meme image</button>\n            </div>\n            <div className=\"relative w-1/2\">\n                <img src={meme.url} alt=\"Meme image\" className=\"w-full\"  />\n                <h2 className=\"absolute top-5 left-1/4 text-white text-xl uppercase font-bold\">{meme.topText}</h2>\n                <h2 className=\"absolute bottom-5 left-1/4 text-white text-xl uppercase font-bold\">{meme.bottomText}</h2>\n            </div>\n            <hr />\n            {/* <Count count={count} />\n            <button onClick={add}>+</button>\n            <button onClick={remove}>-</button>\n            <p>{isGoingOut ? 'Hello World' : 'Not Going Out'}</p>\n            <button onClick={() => setIsGoingOut(!isGoingOut)}>Toggle Is Going Out</button>\n            <br />\n            <h2>Person Object in State</h2>\n            <p>{person.name}. Is He a student? {person.isStudent ? 'Yes' : 'No'}</p>\n            <button onClick={handleToggleStudent}>Toggle Student</button> */}\n\n\n        </main>\n    );\n}\n \nexport default Meme;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,wBAAwB;AAC1C,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,SAAS;AAAC;AAG5B,MAAMC,IAAI,GAAG,MAAM;EAAA;EACf;EACA;EACA;EACA;EACA;EACA;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC;IAC7BK,OAAO,EAAE,EAAE;IACXC,UAAU,EAAE,EAAE;IACdC,GAAG,EAAE;EACT,CAAC,CAAC;EACF,MAAK,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAACD,KAAK,CAAC;EAExD,MAAMW,WAAW,GAAG,MAAM;IACtB,MAAMC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGN,aAAa,CAACO,MAAM,CAAC;IAClE,MAAMR,GAAG,GAAGC,aAAa,CAACG,SAAS,CAAC,CAACJ,GAAG;IACxCH,OAAO,CAACY,QAAQ,KAAK;MACjB,GAAGA,QAAQ;MACXT;IACJ,CAAC,CAAC,CAAC;EACP,CAAC;;EAED;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA,oBACI;IAAA,wBACI;MAAA,wBACI;QACI,IAAI,EAAC,MAAM;QACX,WAAW,EAAC,UAAU;QACtB,IAAI,EAAC,SAAS;QACd,KAAK,EAAEJ,IAAI,CAACE,OAAQ;QACpB,QAAQ,EAAEY;MAAa;QAAA;QAAA;QAAA;MAAA,QACzB,eACF;QACI,IAAI,EAAC,MAAM;QACX,WAAW,EAAC,aAAa;QACzB,IAAI,EAAC,YAAY;QACjB,KAAK,EAAEd,IAAI,CAACG,UAAW;QACvB,QAAQ,EAAEW;MAAa;QAAA;QAAA;QAAA;MAAA,QACzB,eACF;QAAA;QAAA;QAAA;MAAA,QAAM,eACN;QAAA;QAAA;QAAA;MAAA,QAAM,eACN;QAAQ,OAAO,EAAEP,WAAY;QAAA,UAAC;MAAoB;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACzD,eACN;MAAK,SAAS,EAAC,gBAAgB;MAAA,wBAC3B;QAAK,GAAG,EAAEP,IAAI,CAACI,GAAI;QAAC,GAAG,EAAC,YAAY;QAAC,SAAS,EAAC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAI,eAC3D;QAAI,SAAS,EAAC,gEAAgE;QAAA,UAAEJ,IAAI,CAACE;MAAO;QAAA;QAAA;QAAA;MAAA,QAAM,eAClG;QAAI,SAAS,EAAC,mEAAmE;QAAA,UAAEF,IAAI,CAACG;MAAU;QAAA;QAAA;QAAA;MAAA,QAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QACtG,eACN;MAAA;MAAA;MAAA;IAAA,QAAM;EAAA;IAAA;IAAA;IAAA;EAAA,QAYH;AAEf,CAAC;AAAA,GA3EKJ,IAAI;AAAA,KAAJA,IAAI;AA6EV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}