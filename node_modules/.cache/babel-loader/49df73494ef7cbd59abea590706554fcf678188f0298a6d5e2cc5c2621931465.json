{"ast":null,"code":"var _jsxFileName = \"/Users/alain/Documents/the-gym/react-curriculum/section-three/src/components/Meme.jsx\";\nimport memes from \"../shareable/memesData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Meme = () => {\n  const handleClick = () => {\n    const randomNum = Math.floor(Math.random() * memes.length);\n    const url = memes[randomNum];\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Top text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Bottom text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"Get a new meme image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n_c = Meme;\nexport default Meme;\nvar _c;\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"names":["memes","Meme","handleClick","randomNum","Math","floor","random","length","url"],"sources":["/Users/alain/Documents/the-gym/react-curriculum/section-three/src/components/Meme.jsx"],"sourcesContent":["import memes from \"../shareable/memesData\";\n\nconst Meme = () => {\n\n    const handleClick = () => {\n        const randomNum = Math.floor(Math.random() * memes.length);\n        const url = memes[randomNum];\n    }\n\n    return ( \n        <main>\n            <div>\n                <input type=\"text\" placeholder=\"Top text\" />\n                <input type=\"text\" placeholder=\"Bottom text\" />\n                <br />\n                <br />\n                <button onClick={handleClick}>Get a new meme image</button>\n            </div>\n        </main>\n    );\n}\n \nexport default Meme;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,wBAAwB;AAAC;AAE3C,MAAMC,IAAI,GAAG,MAAM;EAEf,MAAMC,WAAW,GAAG,MAAM;IACtB,MAAMC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGN,KAAK,CAACO,MAAM,CAAC;IAC1D,MAAMC,GAAG,GAAGR,KAAK,CAACG,SAAS,CAAC;EAChC,CAAC;EAED,oBACI;IAAA,uBACI;MAAA,wBACI;QAAO,IAAI,EAAC,MAAM;QAAC,WAAW,EAAC;MAAU;QAAA;QAAA;QAAA;MAAA,QAAG,eAC5C;QAAO,IAAI,EAAC,MAAM;QAAC,WAAW,EAAC;MAAa;QAAA;QAAA;QAAA;MAAA,QAAG,eAC/C;QAAA;QAAA;QAAA;MAAA,QAAM,eACN;QAAA;QAAA;QAAA;MAAA,QAAM,eACN;QAAQ,OAAO,EAAED,WAAY;QAAA,UAAC;MAAoB;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EACzD;IAAA;IAAA;IAAA;EAAA,QACH;AAEf,CAAC;AAAA,KAlBKD,IAAI;AAoBV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}